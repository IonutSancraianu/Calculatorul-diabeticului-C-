<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        9kklpdCFNX4mpJJJWKj/2Q==
</value>
  </data>
</root>