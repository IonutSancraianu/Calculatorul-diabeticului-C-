<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        dSqOaWkjKSAxrTY3FwV4hCA//9k=
</value>
  </data>
</root>