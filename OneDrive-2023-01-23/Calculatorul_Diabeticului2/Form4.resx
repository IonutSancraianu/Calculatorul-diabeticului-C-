<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAAAAAAAD/2wBDAAkGBxMTEhUTEhMWFRUWFxcYFxgYFxUYGBgYFRYXFhUYFRcY
        HSggGB0lHRUVITEhJSkrLi4uFx8zODMtNygtLiv/2wBDAQoKCg4NDhoQEBotJSAmLS0tLS0tLS0tLS0t
        LS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS3/wAARCAC2ARUDASIAAhEBAxEB/8QA
        HAAAAgIDAQEAAAAAAAAAAAAABAUCAwABBgcI/8QAOxAAAQMDAQYEBQIFAwQDAAAAAQACEQMEITEFEkFR
        YXEGEyKRMoGhsfDB0RQjQlLhFXLxM5Ki4hZiY//EABoBAAIDAQEAAAAAAAAAAAAAAAIDAAEEBQb/xAAo
        EQACAgICAgEEAgMBAAAAAAAAAQIRAyESMQRBURMUIjJhcSNCsQX/2gAMAwEAAhEDEQA/APPAFixW0bd7
        vha49gSqoqytMdgj+fSIBMPB9lKh4fuXDFF8dRH3XabA8NeVT9X/AFDr06KpJoPGlJnV2FwKnHIRh9Qj
        U/n1XPbNpVKb9MLoNYc35rPBvpm2cEnooqNIwfks84MGePBauq27k5jT7pDd3RcUMpUPxY3MaMuQXSmd
        YiozBhw0XK2rnOdDclPqIgbpKCEnYzPjSoYW9MMho14nn/hGUKvsl9WpgdNT0UrWqmN0zNwtWH1XaK1r
        syhnulvZX0RInomRYlqgpj1t1XiqN8QhKlWfkicqBUbDjdNUTdt6pRXrwqqdRzjhBzY1YtWOm3g4K5tV
        CUbbdHNXQitiml6LW1J1Q7bKlM7jc9AtVqwb34BUioT/AFeyuM3F2DLGpKmHttmDRo9lsURyCDFVw691
        fSqu4gfZaFmMz8f+Tj/F/gVtaalCGv4jg7v1Xne1thVrYxVZAOhGR7r3tlSUPtPZ1OuwsqNBBCKoyA/K
        B88EZUoXUeK/CNS1Jc2XUufFvR37rmSkyi12MTTItC0QpQs6KizQCxbWQoQzipArTis3cqENtCxaJWKE
        PZLXwlaM0ot+YBTWjs+m34WNHyCYeU0auQ19eU6bCQZMY7nRbHKkZVFt0UOa0gxGDH+UtAE4Cyjdbmuh
        1URdsBJGRwWB5Lds6UMXGNIIqUIb6hE6fJC/xG51B4K920AR6nDthKb+5AOEub+B+KL6YNtOvJiUpuH/
        AD7K7aFf7KGxmy41CMNwD1KQ+zow/GNjvZNMUmmcucMnl0CuNaTPHilb7vJVlG4kdlOXoB4225MdGqSP
        llQtzBQVtcAmCireoPZW3YHDjaHDXQiLV+EFSqyFdbvwU2D2ZJrQRVfKWNqEb3dWXlyGgpW68EIpMmOL
        oK3C4pha2xGSIS7Z99JhPKdWRKqNMmRyWiwPQVzfhp3W+o/Qd0HtG/J9LMDQn9kvfcAYCqU6JjxNjUvB
        y4yVNty0JCbpRbcpX1GaV4x0zboFXNrDmuY/jQFNl91VrKwX4tnRug6LbXEaEpJTv0TTvkSyi5eO0NKj
        w4FtRoc04K868W+C4mra+purqf8AUP8AaP0Xd07oK4hruh58U+Oa9Myz8et1R4GWws3cr1Hxb4QFaalO
        G1emG1O/9rvuvNbi2dTJY8FpByDqj/kQ1ToohY0qULTQFCjRC2BK2FJh1UIahaUmrFCDG88c31XDYpjp
        JKY+FqldxdWuKjn8Gg6Y1MLtKPgi1bwJ+aUXQYwljBDQSAE3PJxj2V4sIyn10SuL/eg6Rop2rzqUsrao
        miSfkud7O2orjoIqu1JOUNcPwFKuUBe3GnRQKKBb+sS7dGTp807oUwykGcR99Sk+x6Jc91SJDePUoyvX
        zzVDGr0vRAOklHbOaXGI1TLYtg1kOePUeByAD+qeMLRpA7QpGKF5M9aSENPZ9TfhokTrw900pbMeMwO0
        o0FTFVHwRnlnmwF+830wQp06waEdvTrlL9o2bhkAkHlqjiqFSlemKNu3kwOaVuqx2RNbYtes70jdA4uk
        ew1KYjwxUgAubMawdULTbHxnGCSsX2lzoQnbLo7kTEoEeHKrADIcBrEz/larVIwhriW+M+jderwCBq1V
        qrUQ1VyW9mnHGiZqrTqyDfUVZqqqNCiHeerGV0sFRWU6qlBUMmXSJpXSUjurG1IVNEpMf0LtMbe6XK06
        6Pt7pS2hOTAmjraVadUr8R+G6V0z1emoPhf+juYUbW5TW3rStOLNRyvI8Y8W2vsypQqFlRumhHwu6goI
        MXvO0Nk0blm5VYDyOhHYryfxN4Zfa1DALqR+F3Lo7qtC30YWuJz27jK2G4W4K20ZhQogXwtLZbKxQh7r
        VqBrS4nQErz94LiXZ1lOtt7Qkmm34RqeaW/xO7pqq8mabpejT4eOUVb9gYouJ0Psm9K03GAyDKKsNq7+
        C0AjpqtPeXGIWelWjY5ybpqhLXKts9hea0ue4t5ADXqn1ls1gy4SeZyPZNWW4Gn0UUPkks9aiK7GwZTY
        GNbgc8k9T1V1S1bGgM9AjXW511VrLPQlHQhz92c3d7zfko0torqa2z6YBlsnrKR3ewqXxMlh7yPYrPPF
        K7RqxZ8bVSQRY1d7J0RIrNnGUoFF07ow0ceJRtCnAgIouXQE4xu7GLUTakHVL6dJx0TC1olsmeH5ronR
        szTSrsM3GxpjstACJ4aKDQY9R7Ku6u8ABG2KUW+jVetuBcXtaoPNfu6T/wAroL2vIjnC5Ktqe6Rkdm/x
        oVsqqOQ73Kyq5DlKN8URqx1Q78K97SohvBWMTKwQpMqKTKKup7PNQwxhJ6T+BQjkl2V+YphyNZ4buODP
        dzfvKZ23hKoR66jWnoC79lfGTFvyMUf9hGxxRNF6djwd/wDv/wCH/sqanhau0+hzHjvun2P7qPHL4KXl
        YnrkQtK6bW1wl3+iXDMlk9iCtF7mGHtLT1EIXFxAk4ZOnZ1VpcIytbsqtLHtDg7UFcvZ3i6Cyq7zd7kt
        GDLs5fl+PSPNvGHgt9vNSgC6lxGrmfuFx8SvoogEcwV574w8CzNW1EcXU+fMt5dlslG+jmqVdnm0LFJ9
        NwJBwQYIOCFtKGnSVapnmrbZkkZyq3NRdpTJKy9nXTpDa1oY1E6AHqm1C3DfnqgrNm7BOv6K+pX5JmkZ
        m3Jh7SNEVQZKWW9SU0oOgA8yPz6KLYuSosP0H3UXXMLKx3Z7/QJfc1OJVt0SMbGVW5Dh2S6u/gq7ergy
        rWCUN2M4qJptGUQaO7gjKsaMCBnX/hYawCKkgOTZdQG6JPFStHjMcZlBVqpKrr3W6IGqu6IoNhl7Xgay
        eCWuuCUK65jXKpfeJUpGvFhrQRWdMJfS2K6oSSQwHInJ9uCZWlZm7kS6cT8IHbir6VZAthu43QkuPDVQ
        CWua48tDHzSZ1s4O3XNLTyIIXd+ao17dlUbrx2PEdiicEDHPOP7HDmkpULRzjDRP6dzwTl+yC1xa7DeY
        49kYxzWCGiPziharsd9VtaKLLZFNgl/qd10HYJm2oG4AAHRAOuFE1lOXwLeNy/Yb0rhXCoklOqiKVwiU
        hcsI18xbbVQLbhTbWRWK4DIXhiDlbFWRBgjkchLnVuaxtZXyYP0gmrYUXf0BvVuP8KdlaGnI3pafcKqn
        XV7ayiq7I+dcb0MqTsDKmgGVVa2tHULTHIvZhlhfoU7a8IW1w/zHNLXcS3E91pdCxwOi0m2Jo8hpNlPN
        l2nEpXYBOratAgLBA6uWTqkVbQuNyeX5ot0XSAQZBSHxHdwYVnhq7JZungcdkDl+Q6OP/HyOnoYTSlW9
        IPEEwlFJ/PCIFSE1aM0lYbVrbxQNwScKxj+KGuXtBnlM/p+dVGXHTNl8GEZTeklKvvOJTFtZCmHOId/F
        YQle7CDuboBLris/UNP50VOQcMSY9bW4nRL6t1JlK9obScyiN0ZcY+Q1/RU7KsrmufgLW8yI9hqqcm9I
        fjxJJyk6Gb6xcYaJKmzZVQlsxkTrgdym9tshtKmN0OLyfUTphScSMH7qOC9lfcV+hQzZ7v7wOcSURSsg
        P6j7KIrDitivxV6FuU37LvJ644KbaJGhBQ3nK2nWV6BakE16IqN3Tg8+q5y9pPpmHDseB7FdRSeCOuvy
        Wry0D2Fj9OB4g8CFJQ5FYsv03T6ON81TbUUTY1BUdTAlzc8MgcROqhXovYYe0t7pFM6NxfTC2uVrXJdT
        qq7zEaFyQxFRS81A03qzfRCmgwVeq35iA8xa89QnEZNroilXSltSVbSqHiqKcEO6dVXseltCqim1ExGW
        UQ9r+sLSoYViPkxLgjnaGxg04OFradFtFm+2SR8XUfuEXUukLUueH3/VM4JdCFkk+zz/AGvcmo8nmcJl
        syqGu7CAo3lCnvPLOeOmsx0QdMEFZZRpnUhkUo0jr7avvK/z1z1pcEIo3HGcIVIBw2N/4uAlV/fROUvu
        towIbklDssnVMuJjgP3V22MjCMdsNtr2OKbWtcu7c1z9JjWGFdU2oGjCFKuy5/l0dE57W8fmqbet5r90
        ODW8XnQchnU9Fy1DafmVWtPwzLuwTHaF61x3AIa0afLKueTirSFzhKKdbYXtDafluqst2NrOY3+W/wCK
        XSBUlo5erT+1NdhbQrPoMfWDQ8yfQCJb/SSCTBXHUqnk/wDSPqc4bpBmDo6ehBXbBsDtA9kvBklktszY
        m27kHG6MZ1/JVNaode/59VRv81krTRoVEd9EMq4hD1FAFVQy7CypNcq6T5V26qJYbZVeJKJdccyB7GEB
        alEuDSDOvBHuhMkuWyp7QajH8RiRy4g8wjXOa/BALTiOBSWs4sd3RlrUnRLjJ3QeTFpNCTbGyjSdLcsJ
        weXQoFpXbFrXsLHCQVyO0bE0X7pkjVp5j90fFBY8zepdkablYXhDbyhUfhSi7sMIlVVKTvwhUsrNPGO5
        AUazQNSM9VVFqVF9N2UQxyVsqtHH6oht60cR7qKITl8Dm3qI6m9c/T2i0cR7q9u2af8AcPcI0khEoyfo
        6AVliUUtpsIw4LFdi+D+BHX2iAgK+1eAQF0HSg3EpzZiUS6vcEEmUG7ascAVOoyR1QtOk3ic9VmaZshJ
        UG0tutAzTd9FfZ3L62SwhvBDWNmx7w0mPzgu1tLNrQBGiHgMeVIGtbMQJChcenRNX6QEm2jV8tzPMHxO
        Deg6lE2ktieftim7eUjvqzhoCV6S/wAMtfxLZE847JDtqxpsaKbAJMmZkkNxmczPBRxGwzJOjldlBwDq
        jsHSOiZbHumueC/SSD0lEWlm11NwiDA+y5xodTfjnBQOI5TU7R3FSybvtDWzkEcdDMroXVuHWfZcbsja
        u65pJMae4j7ldQ45RITXyFNdOFira5baiLRItWbq1UcoNVBotbhX06qodUAwclQbV7Ki+xpRqiNEY0tD
        epSqjVn5Iuk8E5OqtMXKIJeGWzOcAA6wFqxqlX3dEFhg840+XVBWYS5KpGiLTxseMqyZVfiG28y3LgPU
        z1Dnj4gPr7BRosMBG0sgtP5OE2JjnraODtbWpUMNEd/uhtp2VVhIDt7/AGyvR6WzGD+lSOzm8gn/AE0I
        +6kmeMXQrAgBpk6DKlS2fcn4jE8SCNF3u0KDTdbsfCzHziUxbs8ERH0QcEmO+6k0mebW2xrh+jp7cEwo
        eFK51cV14sjSfvsGeunsF0Gz6rKjZAhw+JvEfuEcYRFz8nKumcLa+DCfic5PbLwZSbqJ7rqW0OauaxWo
        xvoTLPka/YW2+xKTRAYPZYmixHoVb+Tx22plzZcWmfhAdJnWD0jijKezxHweoDM57EHkld1/Jc3dwAQ0
        0ziXaAtPM4nmnO0do1HMrCkC1wbgECZgYBnBwRPBcjDn4am2AptC2tRbO6XNB5bwQF1sBrnNBd6n/DyP
        z0SStsWqHF1Wo0iJ9Did06jeMR9VZQuH5lzvL/pnBJBnHLP6opeTJapDPqSiFXHhSq3hjSZwjdkWd27+
        VSrkBscQYng0n9EDe7df5cbxBLd15BMuIc6N7MH0hrdOCJ2TtTeZ6QGyHDfgSDuwGk6EHHI41VS8v8k0
        tF/XmC+IK1W0eaFSoXOcGvcQcjOJ6405QgbHau/UYKhJDXk8T8eSf+4AoHbgdUf5h19LXHP9IDQTOZgB
        E7DoAOkz6RMgZOsAHhxKDJKM3yQEpuW2e0eWwNJNYbsSMgQPuvNr+sypUe+m8yzec3eBhwBLjHLHRMza
        A0WRUJa4AvBM8y2OYG8fdLbqyFIhzCXATIgaa/PTRXl8uTapURTad2Zsy/LXA+kh40mRGnySvbvxk7oa
        DyTS62e+7HnMeA5vpI0+emT+ySXdKqz01ASOYWvFcoKRrxZU9+yq3q5C9La6QDzEheViqAR+QvS9k1Aa
        LMzA3T3GP8q2jTysY03c1YcKqm1WKyyK0VIqBVBGgFsiFhC1CgaZdSKNa8E5S8FXUnqFNWGudjn0jhz6
        qNu5s4A7LKNUSJULq3Aed0xgEcsgKn8lL4Y0qEtAAHpOk8FdauEgznj7yl3muHpdkDiM665W6TyD+e6L
        lsU8ehwKpmPqiLckjKV0a8xKZ2rsn3TIStmTJCkcz4ot/LrU64GD6Xfnv7I+3rhMtqWIq03MPHToRkEf
        Nc1sqq4ehwgtx7JkvkCPVDstBQrqJY7eZgj8yr6b/wAwrTBQlh1nch45EahEJFlpBEyE2tbkPHI8R+yN
        OxbVF6xaWIgTxfbO0Awu3mh280AEmXDmRyOUv2XtVjKNQEGTPCcxgfdL9t7Tp1csaGkTOSd4niJHdDVd
        r0BQDabC2oY8wkkg4zAJPH7Lz7i5O7bFj+32lFp5tQgPrb7QwMHpDXbrJBxPpk91vZHkVmOFYjej07oA
        AJmSMcMH5riKd+50gSRpr+hRbS4tlsAcYMEHphMnGTeyEdrNcxzmO1Bg/v8AMZRWwq4Ah2msf3HgFpzG
        VWb1V+7uQN4y4ka7u6PUf0W5Yw0y0bsHe0Oc4MHIiNED3CqLLaTS81ATu7gdO9O64zADTGpEJ5suyb5f
        mzAaDvaAZxg/mi5TaV/UFQkjdy3E6DDchPKt5Uo02gtJa8EPbggR++qGSpq/ZGNLBzvJLQWGAA0MM8Yz
        nEiY7Ia6o1vMALHNaCA/QkNI9UcJzGuCUnuNtljWNksJ0BgQBpJHxa40jKb7N2qd31uLweB+2dUM3KMV
        aJY92ZdsDXABlMNgRvNxgdZPOTzQO0qrCd0kSdMjKT3VvWeC+lndPwxJAHBx1IiEysNiUHN8xwNR+5Ip
        5a3ejAXQweXxhxa2GqWxLd2zeSbbA2oKbg1xw77jEpVVcS0tZI7xvDd4H8ykFS/cHerUcR98I15CyJr2
        asGRXs9mpO+avaZC4rwp4iDgKdQ54Fdm2ccQdDwRRlZrkqNuW91TbTV7KEa4HM/ojB5UDBi0RwRRAGhn
        6KstnRSiKRQ1gWB0aK5lNQLs6D2VUMUix1UHhHbT2WiZjoIUQeisYOihd0WUjBwimNkRMHOugA+yoYPz
        vKvbr3UoBslRKa2lX6fZK91F0CQihpictNDhcv4gtvLqtqtHpfh3eNfYfRdRCE2pZirScw8RjoRkH3Wq
        jCnTsT0XgiZRLHJLYVSMOwQYI5EYKbsdhKGsuc3uqDW3TIKn5qqqCeKsFje2u2uEyAeKxIX0jzWIrBo8
        G2vaeVVcxskAxj86pXtOi4HmQSML6LfsG33t/wApm9MkwMnmUl2r4KtKknyw0nXdxPcJP2kk7VGdSPDL
        OtwPxfn1Texa4EOLi0SQcSDjj7roPEHg8W436YkDQ8R3Sc1GFkA+sk+kiBy9JnjxCyeVjlB9dl8rA69Y
        BpI0DgfmDOe+R80bdta803MIDXDeJEyARIBGnNVtoNbTLX0ZDsb7pxBn0tkTpqeaY21KnvNhzhG7JDW7
        sYJ1WOTSpos5SrUms3eJjfGpgwDI17LsLLxBRqRT8t0TEvLdekD/AIQG070tmk6m15OQ5x9cOmHNOQc/
        ZKmAbxc/0Ma3XU8JJTMijlirX9F9jzxBbU99rXtLyHbtLdG64hxB9XBKKNWKs75cAdC3dLOBaefcLb2v
        rUGOplznBwiNdS2emY7Lpf8A45VqUWCo1grNaSBI/mj/AOxjDgP86qQg+FP+UUCMqmlu1QPQ7Dmb0kGB
        nnxHui9mXx32S3MEb4IEjJjd4Y49UH5/lNFF7C1m8eM8gSJHTgYQd43drMfRcX0+DTggwWkHgO6TwttI
        g+vLYhhcwOc6SIA1/P0XE3V297iKdIYOS7X2xC9KtNpRTLd0EujWNQIORxMD3XL7TtDvOqYLt4yxoBIE
        elwHEYjpjmr8dRVJbYUZUcqzaDmPhwAIMGBER2XpfhLxJIDXOx1Xnl7s8HI3t8nV3EnmEVZ29SnBByum
        o+0jo4Mia4s9zFQkSPoAoETrquJ8MeLSyGVcj7LuqW0KVRoLCJPVGi5RcWVhqwq47sdeaiGjmpRXIrA5
        rC35q7dHNWspt58P+FdF8wXy1YxvJXhrBEn5KT6rBlTiTmRbTPL8HJSAQ9Taio/1AHopRaUhsxk64Cut
        RLgOv0GUroXJPEp7s2j/AFEdv3RwjbE5XxWw9YsWJ5jOT2/R8qr5g+Gpr/vA/Vo+ila3YICebYs/NpOb
        x1aeThlp91wtlWLXQeuORBhw+R+kIZr2FGXo6V9QclAVeyppZ5fnZafSzAP3Swgjz3LFQ2j1BWKyhw8I
        O4YsWLYjIxBta0DmunSD9AvNbq2YG+a5vRobIGcSVixcv/0G+cV/ZcQOhd8CJHJOSGGiAGw90GYEBsxA
        6yFixcqcUgjnb8lw84QXUQMOEgtnSO5lE+Hr5rv5L2NqbwBl4BjJwOY7rFi0QSeN36v/AIW+hte2Ztv5
        lMMazO60SIzBke6dtq1KlTcc6ZzPLAGJ7rFiHyoqHCvfYKZZebAD6jaTgwPxLgJDmk6kcHYKJuPAgZ8D
        x85/ZaWLf4uGDUrXsjFpsDTMPIIkDHtx+Xsuk8H2lN5qN8toPMd4iIwFixIhFY/LqPspbCNs+FqTpIAB
        7Li73ZW4SJCxYutNKh+KTToWVrEarVvdVKR9LisWLNNI6OKb6Htn4ndEVBvdRqnNvtkECA75x+6xYkmq
        UFQT/qY4g/JQq7V5StrEaFqCKDtMjOVD/VJ1B6f5WLFYXFFRuSrbeoStrFTKbpHR7Ps3YyF1lDQdltYt
        EFo5eWTctk1i0sRijCuA8U2/lVy5pw4GoAOBbAfPcH3AWLFa6ZXtF9jX3ufuj4/JWLFnHGzCxYsUIf/Z
</value>
  </data>
</root>